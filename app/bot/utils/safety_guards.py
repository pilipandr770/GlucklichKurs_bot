"""
Safety Guards –¥–ª—è AI –∞–≥–µ–Ω—Ç—ñ–≤
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î OpenAI Moderation API + –∫–∞—Å—Ç–æ–º–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞
"""
import os
import re
from typing import Tuple, Optional
from .openai_client import _client

# Trigger —Å–ª–æ–≤–∞ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ä–∏–∑–∏–∫—É
MEDICAL_TRIGGERS = [
    r'\b(–¥–µ–ø—Ä–µ—Å[—ñ—Å—ñ—è]|—Å—É—ó—Ü–∏–¥|—Å–∞–º–æ–≥—É–±—Å—Ç–≤|–ø–æ–∫—ñ–Ω—á–∏—Ç–∏ –∑ –∂–∏—Ç—Ç—è–º|—Å–º–µ—Ä—Ç|–≤–±–∏—Ç–∏ —Å–µ–±–µ)\b',
    r'\b(–ª—ñ–∫–∏|–ø—Ä–µ–ø–∞—Ä–∞—Ç|—Ç–∞–±–ª–µ—Ç–∫|–∞–Ω—Ç–∏–¥–µ–ø—Ä–µ—Å–∞–Ω—Ç|–ø—Å–∏—Ö—ñ–∞—Ç—Ä)\b',
    r'\b(–¥—ñ–∞–≥–Ω–æ–∑|–ª—ñ–∫—É–≤–∞–Ω–Ω—è|—Ö–≤–æ—Ä–æ–±|—Ä–æ–∑–ª–∞–¥|–±—ñ–ø–æ–ª—è—Ä)\b',
]

LEGAL_TRIGGERS = [
    r'\b(–ø–æ–∑–æ–≤|—Å—É–¥|–∞–¥–≤–æ–∫–∞—Ç|—é—Ä–∏—Å—Ç|–∫–æ–Ω—Ç—Ä–∞–∫—Ç|–¥–æ–≥–æ–≤—ñ—Ä)\b',
    r'\b(–Ω–µ–∑–∞–∫–æ–Ω–Ω|–∑–ª–æ—á–∏–Ω|–ø–æ–ª—ñ—Ü—ñ—è|–ø—Ä–æ–∫—É—Ä–æ—Ä)\b',
]

FINANCIAL_TRIGGERS = [
    r'\b(–∫—Ä–µ–¥–∏—Ç|–ø–æ–∑–∏–∫|–±–æ—Ä–≥|—ñ–Ω–≤–µ—Å—Ç–∏—Ü|–∞–∫—Ü[—ñ—ñ—ó]|–∫—Ä–∏–ø—Ç–æ)\b',
    r'\b(–∑–∞—Ä–æ–±—ñ—Ç|–≥–∞—Ä–∞–Ω—Ç—É—é|100%|–º—ñ–ª—å–π–æ–Ω)\b',
]

PERSONAL_DATA_TRIGGERS = [
    r'\b(\d{10}|\d{4}\s?\d{4}\s?\d{4}\s?\d{4})\b',  # –Ω–æ–º–µ—Ä–∏ –∫–∞—Ä—Ç–æ–∫
    r'\b[A-Z]{2}\d{6}\b',  # –ø–∞—Å–ø–æ—Ä—Ç–∏
]

def check_moderation(text: str) -> Tuple[bool, Optional[str]]:
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ OpenAI Moderation API
    
    Returns:
        (is_safe, violation_category)
        is_safe=True —è–∫—â–æ –∫–æ–Ω—Ç–µ–Ω—Ç –±–µ–∑–ø–µ—á–Ω–∏–π
    """
    try:
        response = _client.moderations.create(input=text)
        result = response.results[0]
        
        if result.flagged:
            # –ó–Ω–∞–π—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Ä—É—à–µ–Ω–Ω—è
            categories = result.categories
            violations = []
            
            if categories.hate: violations.append("hate speech")
            if categories.self_harm: violations.append("self-harm")
            if categories.sexual: violations.append("sexual content")
            if categories.violence: violations.append("violence")
            if categories.harassment: violations.append("harassment")
            
            return False, ", ".join(violations)
        
        return True, None
    
    except Exception as e:
        print(f"‚ö†Ô∏è  Moderation API error: {e}")
        # –Ø–∫—â–æ API –Ω–µ –ø—Ä–∞—Ü—é—î ‚Äî –¥–æ–∑–≤–æ–ª—è—î–º–æ (fail-open)
        return True, None

def check_triggers(text: str, trigger_patterns: list) -> Optional[str]:
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î —Ç–µ–∫—Å—Ç –Ω–∞ trigger —Å–ª–æ–≤–∞
    
    Returns:
        Matched pattern –∞–±–æ None
    """
    text_lower = text.lower()
    for pattern in trigger_patterns:
        if re.search(pattern, text_lower, re.IGNORECASE):
            return pattern
    return None

def sales_guard(user_message: str) -> Tuple[bool, Optional[str]]:
    """
    Guard –¥–ª—è Sales Agent
    
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î:
    - OpenAI Moderation (hate, violence, self-harm)
    - –ú–µ–¥–∏—á–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è
    - –Æ—Ä–∏–¥–∏—á–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è
    - –§—ñ–Ω–∞–Ω—Å–æ–≤—ñ –æ–±—ñ—Ü—è–Ω–∫–∏
    
    Returns:
        (is_allowed, rejection_message)
    """
    # 1. OpenAI Moderation
    is_safe, violation = check_moderation(user_message)
    if not is_safe:
        return False, (
            "‚ö†Ô∏è –í–∏–±–∞—á—Ç–µ, –∞–ª–µ —è –Ω–µ –º–æ–∂—É –æ–±—Ä–æ–±–∏—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –ø–æ—Ä—É—à–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª –±–µ–∑–ø–µ–∫–∏.\n\n"
            "–Ø–∫—â–æ —É –≤–∞—Å —î —Ç–µ—Ä–º—ñ–Ω–æ–≤–µ –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –Ω–∞—à–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏: /help"
        )
    
    # 2. –ú–µ–¥–∏—á–Ω—ñ trigger —Å–ª–æ–≤–∞
    medical_match = check_triggers(user_message, MEDICAL_TRIGGERS)
    if medical_match:
        return False, (
            "‚ö†Ô∏è <b>–í–∞–∂–ª–∏–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</b>\n\n"
            "–Ø –ø–æ–º—ñ—Ç–∏–≤, —â–æ –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è —Å—Ç–æ—Å—É—î—Ç—å—Å—è –º–µ–¥–∏—á–Ω–æ—ó —Ç–µ–º–∏. "
            "–ù–∞—à –∫—É—Ä—Å ‚Äî —Ü–µ –æ—Å–≤—ñ—Ç–Ω—è –ø—Ä–æ–≥—Ä–∞–º–∞ –ø—Ä–æ –ø–æ–∑–∏—Ç–∏–≤–Ω—É –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—é, –∞ –Ω–µ –º–µ–¥–∏—á–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è.\n\n"
            "üè• <b>–Ø–∫—â–æ —É –≤–∞—Å:</b>\n"
            "‚Ä¢ –î–µ–ø—Ä–µ—Å—ñ—è, —Ç—Ä–∏–≤–æ–≥–∞ –∞–±–æ —ñ–Ω—à—ñ –ø—Å–∏—Ö—ñ—á–Ω—ñ —Ä–æ–∑–ª–∞–¥–∏\n"
            "‚Ä¢ –î—É–º–∫–∏ –ø—Ä–æ —Å–∞–º–æ–≥—É–±—Å—Ç–≤–æ\n"
            "‚Ä¢ –ü–æ—Ç—Ä–µ–±–∞ –≤ –ª—ñ–∫—É–≤–∞–Ω–Ω—ñ\n\n"
            "üìû <b>–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—Ä–æ—Ñ–µ—Å—ñ–æ–Ω–∞–ª—ñ–≤:</b>\n"
            "‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤—ñ—Ä–∏: 7333 (–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –ø–æ –£–∫—Ä–∞—ó–Ω—ñ)\n"
            "‚Ä¢ –ü—Å–∏—Ö—ñ–∞—Ç—Ä –∞–±–æ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç\n"
            "‚Ä¢ –°—ñ–º–µ–π–Ω–∏–π –ª—ñ–∫–∞—Ä\n\n"
            "üíö –ù–∞—à –∫—É—Ä—Å –º–æ–∂–µ –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º –¥–æ–ø–æ–≤–Ω–µ–Ω–Ω—è–º –¥–æ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏, –∞–ª–µ –Ω–µ –∑–∞–º—ñ–Ω—é—î —ó—ó.\n\n"
            "–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: /disclaimer"
        )
    
    # 3. –Æ—Ä–∏–¥–∏—á–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è
    legal_match = check_triggers(user_message, LEGAL_TRIGGERS)
    if legal_match:
        return False, (
            "‚ö†Ô∏è –í–∏–±–∞—á—Ç–µ, –∞–ª–µ —è –Ω–µ –º–æ–∂—É –Ω–∞–¥–∞–≤–∞—Ç–∏ —é—Ä–∏–¥–∏—á–Ω—ñ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó.\n\n"
            "–ù–∞—à –∫—É—Ä—Å ‚Äî –ø—Ä–æ –æ—Å–æ–±–∏—Å—Ç–∏–π —Ä–æ–∑–≤–∏—Ç–æ–∫ —Ç–∞ —â–∞—Å—Ç—è, –∞ –Ω–µ –ø—Ä–æ –ø—Ä–∞–≤–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è.\n\n"
            "üìã –Æ—Ä–∏–¥–∏—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è: /legal"
        )
    
    # 4. –§—ñ–Ω–∞–Ω—Å–æ–≤—ñ –æ–±—ñ—Ü—è–Ω–∫–∏ (–∑–∞—Ö–∏—Å—Ç –≤—ñ–¥ —Å–∫–∞–º—É)
    financial_match = check_triggers(user_message, FINANCIAL_TRIGGERS)
    if financial_match:
        return False, (
            "‚ö†Ô∏è <b>–í–∞–∂–ª–∏–≤–µ –∑–∞—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è</b>\n\n"
            "–Ø –Ω–µ –Ω–∞–¥–∞—é —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏—Ö –ø–æ—Ä–∞–¥ —Ç–∞ –Ω–µ –≥–∞—Ä–∞–Ω—Ç—É—é –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.\n\n"
            "–ù–∞—à –∫—É—Ä—Å ‚Äî –ø—Ä–æ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á—á—è, –∞ –Ω–µ –ø—Ä–æ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–π —É—Å–ø—ñ—Ö.\n\n"
            "üìã –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ –æ–±–º–µ–∂–µ–Ω–Ω—è: /disclaimer"
        )
    
    return True, None

def coach_guard(user_message: str) -> Tuple[bool, Optional[str]]:
    """
    Guard –¥–ª—è Coach Agent (–ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏)
    
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î:
    - OpenAI Moderation
    - –ú–µ–¥–∏—á–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è (–±—ñ–ª—å—à –º'—è–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å)
    - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
    - –ó–∞–ø–∏—Ç–∏ –Ω–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
    
    Returns:
        (is_allowed, rejection_message)
    """
    # 1. OpenAI Moderation
    is_safe, violation = check_moderation(user_message)
    if not is_safe:
        return False, (
            "‚ö†Ô∏è –í–∏–±–∞—á—Ç–µ, —è –Ω–µ –º–æ–∂—É –æ–±—Ä–æ–±–∏—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.\n\n"
            "–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ ‚Äî –Ω–∞–ø–∏—à—ñ—Ç—å /help"
        )
    
    # 2. –ú–µ–¥–∏—á–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è (–º'—è–∫—à–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è –ø–ª–∞—Ç–Ω–∏–∫—ñ–≤)
    medical_match = check_triggers(user_message, MEDICAL_TRIGGERS)
    if medical_match:
        return False, (
            "‚ö†Ô∏è <b>–í–∞–∂–ª–∏–≤–∞ –ø—Ä–∏–º—ñ—Ç–∫–∞</b>\n\n"
            "–Ø –±–∞—á—É, —â–æ –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è —Å—Ç–æ—Å—É—î—Ç—å—Å—è –º–µ–¥–∏—á–Ω–æ—ó —Ç–µ–º–∏. "
            "–•–æ—á–∞ –Ω–∞—à –∫—É—Ä—Å –±–∞–∑—É—î—Ç—å—Å—è –Ω–∞ –Ω–∞—É—Ü—ñ, –≤—ñ–Ω –ù–ï –∑–∞–º—ñ–Ω—é—î –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—ó –º–µ–¥–∏—á–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏.\n\n"
            "üè• <b>–†–µ–∫–æ–º–µ–Ω–¥—É—é –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è:</b>\n"
            "‚Ä¢ –ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç –∞–±–æ –ø—Å–∏—Ö—ñ–∞—Ç—Ä\n"
            "‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤—ñ—Ä–∏: 7333\n\n"
            "üíö –Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏ –∑ –∫—É—Ä—Å—É (–≤–¥—è—á–Ω—ñ—Å—Ç—å, —É—Å–≤—ñ–¥–æ–º–ª–µ–Ω—ñ—Å—Ç—å —Ç–æ—â–æ), "
            "—è–∫—ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º –¥–æ–ø–æ–≤–Ω–µ–Ω–Ω—è–º –¥–æ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏.\n\n"
            "üìã –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: /disclaimer"
        )
    
    # 3. –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
    personal_data_match = check_triggers(user_message, PERSONAL_DATA_TRIGGERS)
    if personal_data_match:
        return False, (
            "‚ö†Ô∏è <b>–ó–∞—Ö–∏—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö</b>\n\n"
            "–Ø –ø–æ–º—ñ—Ç–∏–≤, —â–æ –≤–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –æ—Å–æ–±–∏—Å—Ç—ñ –¥–∞–Ω—ñ (–Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏, –ø–∞—Å–ø–æ—Ä—Ç —Ç–æ—â–æ).\n\n"
            "üîí <b>–í–∞–∂–ª–∏–≤–æ:</b>\n"
            "‚Ä¢ –Ø –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—é –≤–∞—à—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n"
            "‚Ä¢ –ù–µ –¥—ñ–ª—ñ—Ç—å—Å—è —á—É—Ç–ª–∏–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –≤ —á–∞—Ç—ñ\n"
            "‚Ä¢ –í–∏–¥–∞–ª—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–∞–Ω–∏–º–∏ (—É—Ç—Ä–∏–º–∞–π—Ç–µ ‚Üí –í–∏–¥–∞–ª–∏—Ç–∏)\n\n"
            "üìã –ü–æ–ª—ñ—Ç–∏–∫–∞ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ: /datenschutz"
        )
    
    # 4. –ó–∞–ø–∏—Ç–∏ –Ω–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
    if re.search(r'\b(–∑–∞–ø–∞–º\'—è—Ç–∞–π|–∑–±–µ—Ä–µ–∂–∏|–∑–∞–ø–∏—à–∏|–Ω–æ—Ç–∞—Ç–∫)\b', user_message.lower()):
        return False, (
            "‚ÑπÔ∏è <b>–ü—Ä–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö</b>\n\n"
            "–Ø –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—é —ñ—Å—Ç–æ—Ä—ñ—é –Ω–∞—à–∏—Ö —Ä–æ–∑–º–æ–≤ –º—ñ–∂ —Å–µ—Å—ñ—è–º–∏.\n\n"
            "–ö–æ–∂–Ω–µ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚Äî —Ü–µ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç. "
            "–†–µ–∫–æ–º–µ–Ω–¥—É—é –≤–µ—Å—Ç–∏ –≤–ª–∞—Å–Ω—ñ –Ω–æ—Ç–∞—Ç–∫–∏ –ø—Ä–æ –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å —É –∫—É—Ä—Å—ñ.\n\n"
            "üìã –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: /datenschutz"
        )
    
    return True, None

async def apply_guard(user_message: str, agent_type: str) -> Tuple[bool, Optional[str]]:
    """
    –ó–∞—Å—Ç–æ—Å–æ–≤—É—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π guard –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–∏–ø—É –∞–≥–µ–Ω—Ç–∞
    
    Args:
        user_message: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        agent_type: "sales" –∞–±–æ "coach"
    
    Returns:
        (is_allowed, rejection_message)
    """
    if agent_type == "sales":
        return sales_guard(user_message)
    elif agent_type == "coach":
        return coach_guard(user_message)
    else:
        # –î–ª—è –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –∞–≥–µ–Ω—Ç—ñ–≤ ‚Äî –∑–∞–≤–∂–¥–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ moderation
        is_safe, _ = check_moderation(user_message)
        return is_safe, None
