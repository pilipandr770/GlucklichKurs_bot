# file: app/bot/utils/lesson_loader.py
import os
import json
from typing import List, Dict, Optional

LESSONS_DIR = os.path.join("data", "lessons")

def load_all_lessons() -> List[Dict]:
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –≤—Å—ñ 10 —É—Ä–æ–∫—ñ–≤ –∑ data/lessons/ —É –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É"""
    lessons = []
    for i in range(1, 11):
        path = os.path.join(LESSONS_DIR, f"lesson_{i}.json")
        if os.path.exists(path):
            with open(path, "r", encoding="utf-8") as f:
                lessons.append(json.load(f))
    return lessons

def load_lesson(lesson_id: int) -> Optional[Dict]:
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π —É—Ä–æ–∫ –∑–∞ ID"""
    path = os.path.join(LESSONS_DIR, f"lesson_{lesson_id}.json")
    if not os.path.exists(path):
        return None
    with open(path, "r", encoding="utf-8") as f:
        return json.load(f)

def get_lessons_summary() -> str:
    """–ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –≤—Å—ñ—Ö —É—Ä–æ–∫—ñ–≤ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∞–≥–µ–Ω—Ç–∞"""
    lessons = load_all_lessons()
    summary = "üìö –£–†–û–ö–ò –ö–£–†–°–£ ¬´10 –ö–†–û–ö–Ü–í –î–û –©–ê–°–¢–Ø¬ª:\n\n"
    for lesson in lessons:
        summary += f"–£—Ä–æ–∫ {lesson['lesson_id']}: {lesson['title']}\n"
        summary += f"–°—É—Ç—å: {lesson['core'][:150]}...\n\n"
    return summary

def get_full_lessons_context() -> str:
    """–ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—Å—ñ—Ö —É—Ä–æ–∫—ñ–≤ –¥–ª—è –∫–æ—É—á-–∞–≥–µ–Ω—Ç–∞"""
    lessons = load_all_lessons()
    context = "=== –ü–û–í–ù–ê –ë–ê–ó–ê –ó–ù–ê–ù–¨ –ö–£–†–°–£ ===\n\n"
    
    for lesson in lessons:
        context += f"{'='*60}\n"
        context += f"–£–†–û–ö {lesson['lesson_id']}: {lesson['title'].upper()}\n"
        context += f"{'='*60}\n\n"
        context += f"üéØ –•–£–ö: {lesson['hook']}\n\n"
        context += f"üìñ –û–°–ù–û–í–ê:\n{lesson['core']}\n\n"
        context += f"üî¨ –î–û–ö–ê–ó–ò:\n{lesson['evidence']}\n\n"
        
        context += "üí° –ü–†–ê–ö–¢–ò–ö–ò:\n"
        context += "–£—Å–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (Awareness):\n"
        for idx, practice in enumerate(lesson['practices']['awareness'], 1):
            context += f"  {idx}. {practice}\n"
        
        context += f"\n–î—ñ—è (Action):\n"
        context += f"  –ó–∞–≤–¥–∞–Ω–Ω—è: {lesson['practices']['action']['task']}\n"
        context += f"  –ß–∞—Å: {lesson['practices']['action']['time_estimate']}\n"
        
        context += f"\n–ó–∞–∫—Ä—ñ–ø–ª–µ–Ω–Ω—è (Reinforcement):\n"
        context += f"  {lesson['practices']['reinforcement']}\n\n"
        
        context += "‚ùì –ö–í–Ü–ó:\n"
        for idx, q in enumerate(lesson['quiz'], 1):
            context += f"  Q{idx}: {q['question']}\n"
            context += f"  –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {q['options'][q['correct_index']]}\n"
            context += f"  –ü–æ—è—Å–Ω–µ–Ω–Ω—è: {q['explanation']}\n\n"
    
    return context
