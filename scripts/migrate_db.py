#!/usr/bin/env python3
"""
–ú—ñ–≥—Ä–∞—Ü—ñ—è –ë–î –¥–ª—è Gl√ºckenKurs Bot
–°—Ç–≤–æ—Ä—é—î —Å—Ö–µ–º—É —Ç–∞ —Ç–∞–±–ª–∏—Ü—ñ –≤ PostgreSQL –Ω–∞ Render
"""
import os
import sys

def migrate():
    DATABASE_URL = os.environ.get("DATABASE_URL")
    DB_SCHEMA = os.environ.get("DB_SCHEMA", "gluckenkurs")
    
    if not DATABASE_URL:
        print("‚ö†Ô∏è  DATABASE_URL –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—é (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è SQLite)")
        return
    
    print(f"üîÑ –ü–æ—á–∞—Ç–æ–∫ –º—ñ–≥—Ä–∞—Ü—ñ—ó –ë–î...")
    print(f"   –°—Ö–µ–º–∞: {DB_SCHEMA}")
    
    try:
        import psycopg2
        
        # Render –Ω–∞–¥–∞—î postgres://, –∞–ª–µ psycopg2 –ø–æ—Ç—Ä–µ–±—É—î postgresql://
        if DATABASE_URL.startswith("postgres://"):
            DATABASE_URL = DATABASE_URL.replace("postgres://", "postgresql://", 1)
        
        conn = psycopg2.connect(DATABASE_URL)
        conn.autocommit = True
        
        with conn.cursor() as cur:
            # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ö–µ–º—É
            print(f"üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏ {DB_SCHEMA}...")
            cur.execute(f"CREATE SCHEMA IF NOT EXISTS {DB_SCHEMA}")
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é users
            print(f"üìä –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ {DB_SCHEMA}.users...")
            cur.execute(f"""
                CREATE TABLE IF NOT EXISTS {DB_SCHEMA}.users (
                    user_id BIGINT PRIMARY KEY,
                    username TEXT,
                    seen_intro_at BIGINT,
                    reminder_sent INTEGER DEFAULT 0,
                    is_paid INTEGER DEFAULT 0,
                    stripe_session_id TEXT,
                    created_at BIGINT DEFAULT EXTRACT(EPOCH FROM NOW())::BIGINT
                )
            """)
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–¥–µ–∫—Å–∏ –¥–ª—è —à–≤–∏–¥—à–æ–≥–æ –ø–æ—à—É–∫—É
            print(f"üîç –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å—ñ–≤...")
            cur.execute(f"""
                CREATE INDEX IF NOT EXISTS idx_users_stripe_session 
                ON {DB_SCHEMA}.users(stripe_session_id)
                WHERE stripe_session_id IS NOT NULL
            """)
            
            cur.execute(f"""
                CREATE INDEX IF NOT EXISTS idx_users_reminders
                ON {DB_SCHEMA}.users(seen_intro_at, reminder_sent, is_paid)
                WHERE seen_intro_at IS NOT NULL
            """)
        
        conn.close()
        
        print("‚úÖ –ú—ñ–≥—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –º—ñ–≥—Ä–∞—Ü—ñ—ó: {e}")
        sys.exit(1)

if __name__ == "__main__":
    migrate()
